# go-swagger release pipeline
#
# This pipeline produces:
#
# * github release
# * signed binaries (linux, windows, macos)
# * signed packages for linux distros
# * signed source archive
# * signed checksum files
# * ~signed sboms for binary and source archives~
# * released documentation site
# * ~announcement message on slack channel~
#
# It does not produce:
#
# * docker images
# * uploads to cloudsmith
# * release notes
# * change log
#
# Check the documentation at https://goreleaser.com

version: 2
project_name: go-swagger

before:
  hooks:
    - go mod tidy

env: # these env are useful to allow usage from a fork
  - GIT_OWNER={{ if index .Env "GITHUB_REPOSITORY_OWNER" }}{{ .Env.GITHUB_REPOSITORY_OWNER }}{{ else }}go-swagger{{ end }}
  - GIT_REPO={{ if index .Env "GITHUB_REPOSITORY" }}{{ .Env.GITHUB_REPOSITORY }}{{ else }}go-swagger{{ end }}
  - MODULE_NAME=github.com/go-swagger/go-swagger
  - GITHUB_TOKEN={{ .Env.GITHUB_TOKEN }}  # being explicit about this requirement, fails if not defined
  - GPG_PASSWORD=${GPG_PASSWORD}  # being explicit about this requirement
  - GPG_KEY_PATH=${GPG_KEY_PATH}  # being explicit about this requirement
  #- CLOUDSMITH_ORG=${CLOUDSMITH_ORG:-"go-swagger"}
  #- CLOUDSMITH_TOKEN=${CLOUDSMITH_TOKEN}
builds:
  - id: swagger
    main: ./cmd/swagger
    binary: swagger
    env:
      - CGO_ENABLED=0
    ldflags:
      - >-
        -s -w
        -X {{ .Env.MODULE_NAME }}/cmd/swagger/commands.Commit={{ .FullCommit }}
        -X {{ .Env.MODULE_NAME }}/cmd/swagger/commands.Version={{ if .Tag }}{{ .Tag }}{{ else }}{{ .Summary }}{{ end }}
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm
      - arm64
      - ppc64le
      - s390x
    ignore:
      - goos: darwin
        goarch: ppc64le
      - goos: darwin
        goarch: arm
      - goos: darwin
        goarch: s390x
      - goos: windows
        goarch: ppc64le
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: s390x
    mod_timestamp: '{{ .CommitTimestamp }}'

gomod:
  proxy: true
  env:
  - GOPRIVATE=github.com/go-swagger

upx:
  - enabled: false # TODO
    compress: best
    lzma: false
    brute: false
    goos: [linux]
    goarch: [arm,arm64,amd64]
  - enabled: false # TODO
    compress: best
    lzma: false
    brute: false
    goos: [windows]
    goarch: [amd64]

archives:
  - id: release-binary-bundles
    formats: [tar.gz]
    format_overrides:
      - goos: windows
        formats: [zip]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      swagger_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- with .Arm }}v{{ . }}{{ end }}
    strip_binary_directory: true
    builds_info:
      owner: root
      group: root
      mtime: "{{ .CommitDate }}"
      mode: 0644
    files:
      - LICENSE
  - id: release-single-binary
    formats: [binary]
    # this keeps compatibility with older releases
    name_template: swagger_{{ .Os }}_{{ .Arch }}{{ if eq .Os "windows" }}.exe{{ end }}

    strip_binary_directory: true
    builds_info:
      owner: root
      group: root
      mtime: "{{ .CommitDate }}"
      mode: 0644
  - id: release-doc-site
    formats: [tar.gz]
    meta: true
    name_template: goswaggerio_{{ .Version }}
    files:
      - 'docs/**' # TODO: copy outcome of build doc site for release (as generated html)

source:
  enabled: true
  name_template: "{{ .ProjectName }}-source"
  format: "tar.gz"
  prefix_template: "{{ .ProjectName }}-{{ .Version }}/"

checksum:
  name_template: "{{ .ProjectName }}-checksums.txt"
  algorithm: sha256
  split: false

nfpms:
  - id: linux-distros
    package_name: "{{ .ProjectName }}"
    #if: '{{ eq .Os "linux" }}' # <- pro feature
    vendor: go-swagger
    homepage: http://goswagger.io
    maintainer: Frédéric BIDON <fredbi@yahoo.com>
    description: |
      An implementation of OpenAPI 2.0 (aka swagger) for golang.

      To generate an API from a swagger spec or generate a swagger spec from go source.
    license: Apache 2.0
    formats: [ deb, rpm ]
    recommends: [ go, git ]
    bindir: /usr/bin
    mtime: "{{ .CommitDate }}"

    #rpm:
    #  signature: ~  # TODO
    #    key_file: "{{ .Env.GPG_KEY_PATH }}"
    #deb:
    #  signature: ~  # TODO
    #    key_file: "{{ .Env.GPG_KEY_PATH }}"
    #    type: origin
    #  fields:
    #    Bugs: https://github.com/go-swagger/go-swagger/issues

# not using goreleaser for docker for now
#docker_digest:
#binary_signs:
#docker_signs:
#before_publish:
changelog:
  disable: false
  #title: 'CHANGELOG'  # <- pro feature
  use: github
  #use: git
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

#sboms:
#  - id: binary-sbom
#    disable: false
#    cmd: syft # alternative: trivy
#    documents:
#      - "{{ .ArtifactName }}.sbom.json"
#    artifacts: archive
#  - id: package-sbom
#    disable: false
#    cmd: syft # alternative: trivy
#    documents:
#      - "{{ .ArtifactName }}.sbom.json"
#    artifacts: package
#  - id: source-sbom
#    disable: false
#    cmd: syft # alternative: trivy
#    documents:
#      - "{{ .ArtifactName }}.sbom.json"
#    artifacts: source
#  # TODO: cyclonedx

#signs:
#  - id: sign-artifacts
#    cmd: gpg # alternative: cosign
#    signature: XYZ
#    artifacts:
#      - checksum
#      - package
#      - archive
#      - source
#      - sbom
#    stdin: "{{ .Env.GPG_PASSWORD }}"
#    output: true

release:
  github:
    owner: '{{ .Env.GIT_OWNER }}'
    name: '{{ .Env.GIT_REPO }}'

  draft: true # TODO: remove
  replace_existing_draft: true
  make_latest: true
  mode: replace
  header: |
    {{ .ProjectName }} release {{ .Version }}

    ---

    Released on {{ .Now.Format "2006 Jan 02" }}

    Available:
  footer: |

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).

announce:
  slack: ~

#cloudsmiths: # <-- pro feature
#  - organization: '{{ .Env.CLOUDSMITH_ORG }}'
#    repository: '{{ .ProjectName }}'
#    secret_name: CLOUDSMITH_TOKEN
#    formats: [ deb, rpm ]
#    distributions:
#      deb: debian
#      rpm: fedora
#    component: main
#    republish: true

#metadata:
# maintainers:                     # <- pro feature
#    - 'fredbi <fredbi@yahoo.com>'
#  license: Apache-2.0              # <- pro feature
#  homepage: 'http://goswagger.io'  # <- pro feature
