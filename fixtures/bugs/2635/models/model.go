// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Model An object to hold the email parameters for calls
//
// swagger:model Model
type Model struct {

	// template data
	// Required: true
	TemplateData map[string]interface{} `json:"template_data"`
}

// Validate validates this model
func (m *Model) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTemplateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Model) validateTemplateData(formats strfmt.Registry) error {

	if err := validate.Required("template_data", "body", m.TemplateData); err != nil {
		return err
	}

	for k := range m.TemplateData {

		// DEBUG: ICI
		// in .AdditionalProperties
		// Required: true
		// IsNullable: false
		// IsInterface: true
		// IsMapNullOverride: true
		if m.TemplateData[k] == nil {
			return errors.Required("template_data"+"."+k, "body", m.TemplateData[k])
		}

	}

	return nil
}

// ContextValidate validates this model based on context it is used
func (m *Model) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Model) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Model) UnmarshalBinary(b []byte) error {
	var res Model
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
