// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "patch with array",
    "title": "test",
    "version": "0.0.0"
  },
  "paths": {
    "/change/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "description": "array to post",
          "name": "myArray",
          "in": "body",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/item"
            }
          }
        }
      ]
    }
  },
  "definitions": {
    "item": {
      "type": "string"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "patch with array",
    "title": "test",
    "version": "0.0.0"
  },
  "paths": {
    "/change/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "description": "array to post",
          "name": "myArray",
          "in": "body",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/item"
            }
          }
        }
      ]
    }
  },
  "definitions": {
    "item": {
      "type": "string"
    }
  }
}`))
}
